<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title></title>
        <description></description>
        <link></link>
        <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Manual rápido de Github/Git</title>
            <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Instala git. Crea un repositorio desde la página de Github. Descárgalo con &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt;. Actualiza tu versión local con &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;. Empaqueta cambios con &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt;. Envía cambios con &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull &amp;amp;&amp;amp; git push&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;la-versión-larga&quot;&gt;La versión larga&lt;/h2&gt;

&lt;p&gt;Github es un servicio de almacenamiento de código con control de versiones Git. Git permite a los desarrolladores llevar un registro de todos los cambios realizados a lo largo del tiempo. Con una cuenta en Github puedes crear tantos repositorios (públicos) como quieras, y 5 privados si registras tu correo de la Universidad en &lt;a href=&quot;http://edu.github.com&quot;&gt;Github Edu&lt;/a&gt;. Cada repositorio puede estar compartido por el creador para varios colaboradores, de forma que todos pueden editarlo.&lt;/p&gt;

&lt;p&gt;La gran ventaja de Github/Git respecto de los sistemas de sincronización de archivos (como Dropbox o OneDrive) es que Git no almacena cada archivo completo generado tras cada cambio, sino únicamente los cambios que se han hecho desde la primera versión de cada archivo. Esto permite recuperar un código antiguo sin necesidad de hacer varias copias, y que varios colaboradores editen el mismo archivo sin crear conflictos de versiones, ya que los cambios se mezclan en un único archivo resultante.&lt;/p&gt;

&lt;p&gt;Existen más sistemas de control de versiones aparte de Git, pero son en su mayoría centralizados (solo el servidor almacena el código completo), mientras que Git es un sistema distribuido, es decir, en el que todos los colaboradores obtienen una copia completa del repo y hacen sus propios cambios, estando en el servidor la combinación de los códigos de todos.&lt;/p&gt;

&lt;h3 id=&quot;terminología&quot;&gt;Terminología&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;repository/repo&lt;/em&gt; - Lugar en Github para almacenar todo el código de un proyecto e ir registrando los cambios.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;clone&lt;/em&gt; - Descargar el código de un repositorio y activar git sobre él.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;commit&lt;/em&gt; - Crear un paquete de cambios a partir de los cambios realizados en la versión local del repo.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;pull&lt;/em&gt; - Estando en la versión local del repo, descargar los cambios hasta la versión más actual.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;push&lt;/em&gt; - Enviar los cambios (empaquetados en commits) de la versión local del repo a Github (para que los demás colaboradores puedan descargarlos).&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;merge&lt;/em&gt; - Mezcla de cambios de varios desarrolladores o cuando se envian commits realizados sobre versiones antiguas de los archivos.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;fork&lt;/em&gt; - Copiar el código de un repositorio (en el que no tenemos permiso de edición) a otro propio para poder editar (y mejorar o arreglar fallos).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;estado-de-los-archivos&quot;&gt;Estado de los archivos&lt;/h3&gt;
&lt;p&gt;Puede consultarse el estado del repositorio usando &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;. Simplificando, podemos tener los archivos en los siguientes estados:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;No registrados (untracked)&lt;/em&gt; - Archivos y modificaciones no añadidas al repositorio. No se enviarán con el próximo commit.  No se tienen en cuenta en el repositorio. Pueden añadirse con &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;, y pasarán a estar registrados.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Registrados (tracked)&lt;/em&gt; - Archivos y modificaciones añadidos, que serán parte del próximo commit.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Formando parte del commit (committed)&lt;/em&gt; - Tras realizar un &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;, archivos y modificaciones que ya forman parte de un commit, aunque todavía no se haya enviado el commit al repositorio.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Enviados (pushed)&lt;/em&gt; - Tras enviar el commit con &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;, los archivos ya forman parte del repositorio de GitHub.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Además, se pueden especificar archivos a ignorar completamente por git en el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;. En este archivo
podemos añadir nombres de archivo y directorios (separados por saltos de línea) de forma que el registro de cambios
no se realice nunca sobre ellos y ni siquiera aparecerán como &lt;em&gt;untracked&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;creación-del-repo&quot;&gt;Creación del repo&lt;/h3&gt;
&lt;p&gt;Asumiendo que usamos Linux para utilizar Github, hemos de instalar primero el sistema de control de versiones (en
 Ubuntu, &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install git&lt;/code&gt; bastará). En Windows existe una &lt;a href=&quot;http://windows.github.com&quot;&gt;fantástica aplicación&lt;/a&gt;
que hace todo el trabajo por nosotros, sin necesidad de línea de comandos (OS X también tiene &lt;a href=&quot;http://mac.github.com/&quot;&gt;la suya&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Un repositorio se puede crear desde la web de Github, que nos pedirá un nombre y nos sugerirá que comencemos añadiendo
 un archivo README. Una vez creado, copiamos el enlace que aparecerá al final de la sección derecha en la página del
repo (terminado en &lt;em&gt;.git&lt;/em&gt;) y ejecutamos en terminal &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone URL&lt;/code&gt; donde URL es la dirección obtenida. Esto creará
una carpeta con contenido idéntico al del repo.&lt;/p&gt;

&lt;h3 id=&quot;modificación&quot;&gt;Modificación&lt;/h3&gt;
&lt;p&gt;Antes de modificar nada es conveniente ejecutar &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; para descargar la última versión de los archivos, en caso
de que algún colaborador los haya editado. Esto nos evitará merges innecesarios.&lt;/p&gt;

&lt;p&gt;Tras crear archivos en la versión local, ejecutamos &lt;code class=&quot;highlighter-rouge&quot;&gt;git add file1 file2 ...&lt;/code&gt; para añadirlos al control de cambios,
o con &lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt;, para añadir todo lo que haya sido modificado, creado,… El comando &lt;code class=&quot;highlighter-rouge&quot;&gt;git rm file&lt;/code&gt; se emplea para
borrar archivos del repositorio.&lt;/p&gt;

&lt;p&gt;Después de crear archivos o realizar varios cambios en los ya existentes es recomendable crear un commit con &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt;. Esto nos abrirá una instancia del editor &lt;code class=&quot;highlighter-rouge&quot;&gt;nano&lt;/code&gt; en la que podremos escribir un mensaje para el commit (no puede estar vacío), que describa los cambios realizados brevemente. Al pulsar Ctrl-O, Ctrl-X para guardar y salir, se termina la creación del commit. Aún no están enviados los cambios al repo online, sino que se ha realizado un registro de los mismos, y se puede decir que estamos un commit &lt;em&gt;por delante&lt;/em&gt; de la versión en Github.&lt;/p&gt;

&lt;p&gt;Antes de enviar los cambios es importante asegurar que se sobreescribirán en las versiones más recientes de los archivos (el repo en Github también podría estar varios commits por delante de nosotros) y para ello ejecutamos &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;. Normalmente nos diría que estamos en la versión más actual, pero si no lo estuviéramos no pasa nada, crearía un merge automático mezclando los cambios realizados por nosotros con los más modernos en Github (el caso de que haya conflictos está descrito más abajo).&lt;/p&gt;

&lt;p&gt;Finalmente ejecutamos &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt; que envía nuestros cambios y actualiza el repo en Github. Si ha sido necesario un merge se nos abrirá una instancia de &lt;code class=&quot;highlighter-rouge&quot;&gt;nano&lt;/code&gt; con un mensaje por defecto para el mismo, que podremos cerrar (Ctrl-X) para mantener.&lt;/p&gt;

&lt;p&gt;En resumen, el orden de comandos necesarios es:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; -&amp;gt; (modificaciones) -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt;&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Consejo&lt;/dt&gt;
  &lt;dd&gt;Es cómodo añadir un alias a nuestro &lt;em&gt;.bashrc&lt;/em&gt; para ejecutar las últimas tres órdenes de seguido. Para ello ejecutad
:
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alias gitsync='git commit -a &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; git push origin master'&quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;El comando &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt; envía los cambios locales a la rama &lt;em&gt;master&lt;/em&gt; (la principal) del repositorio remoto (&lt;em&gt;origin&lt;/em&gt;) en Github. Al trabajar con varias ramas podríamos ejecutar variaciones del tipo &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin rama_pruebas&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;conflictos&quot;&gt;Conflictos&lt;/h3&gt;
&lt;p&gt;Si dos colaboradores trabajan simultáneamente sobre el mismo archivo es posible que se produzcan conflictos, es decir, que uno de ellos no tuviera actualizados los cambios del otro y envíe unos cambios que los sobreescribirían. En ese caso el merge automático falla y git deja que el usuario termine de mezclar los cambios manualmente (para ello separará en los archivos los cambios propios de los otros mediante marcas como &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;). Tras terminar de mezclarlos, es suficiente con ejecutar de nuevo &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;sitios-web&quot;&gt;Sitios web&lt;/h3&gt;
&lt;p&gt;Un repositorio con el nombre &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt; (con &lt;em&gt;username&lt;/em&gt; nuestro usuario) podrá almacenar páginas HTML que se accedan desde http://username.github.io. Además, una rama &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; en cualquier otro repositorio se podrá acceder desde http://username.github.io/nombre_repo/.&lt;/p&gt;

&lt;h3 id=&quot;más-avanzado&quot;&gt;Más avanzado&lt;/h3&gt;
&lt;p&gt;Este breve manual no abarca aún temas más avanzados como el aprovechamiento de las ramas (&lt;em&gt;branches&lt;/em&gt;), los métodos para volver atrás en el código (&lt;em&gt;reverts&lt;/em&gt; y demás), y la colaboración en otros proyectos mediante &lt;em&gt;forks&lt;/em&gt; y &lt;em&gt;pull requests&lt;/em&gt;.&lt;/p&gt;
</description>
            <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-2-23-manualgit/</link>
            <guid isPermaLink="true">/blog/2014-2-23-manualgit/</guid>
        </item>
        
        <item>
            <title>La desigualdad de las medias</title>
            <description>&lt;p&gt;En varios problemas de optimización se pide
estudiar el mínimo o máximo de una función de varias variables
de las que se conoce su suma o su producto. Un procedimiento habitual es calcular la
derivada de una función sobre la que se ha aplicado ya la restricción que impone
la suma o el producto y buscar extremos absolutos entre los puntos críticos.
Otro procedimiento común es usar los &lt;a href=&quot;http://es.wikipedia.org/wiki/Multiplicadores_de_Lagrange&quot;&gt;multiplicadores de Lagrange&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pero en ocasiones, es más simple usar desigualdades. La función puede
quedar acotada superior o inferiormente por alguna constante conocida,
como la suma de variables o el producto.
Entonces, si existe un caso de igualdad con la acotación, este debe ser el extremo
absoluto.&lt;/p&gt;

&lt;p&gt;En este artículo se expone una de las desigualdades más útiles para acotación
de funciones de varias variables: la desigualdad de las medias.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;generalizando-la-media&quot;&gt;Generalizando la media&lt;/h2&gt;

&lt;p&gt;La desigualdad se basa en comparar las distintas formas de calcular una media
sobre un conjunto de números reales positivos. Cuando se habla de la &lt;em&gt;media&lt;/em&gt; de un
conjunto de números, suele referirse a la media aritmética, pero hay varias formas de
generalizar este concepto de &lt;em&gt;media&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Por un lado, hay varias &lt;em&gt;medias básicas&lt;/em&gt; que funcionan en contextos específicos, como la
media geométrica en el cálculo de volúmenes o la media armónica en el cálculo de
velocidades. Por otro lado, las &lt;em&gt;medias de Hölder&lt;/em&gt; son una generalización que
contiene a las medias básicas como caso particular.&lt;/p&gt;

&lt;h3 id=&quot;generalizaciones-básicas&quot;&gt;Generalizaciones básicas&lt;/h3&gt;

&lt;h4 id=&quot;la-media-aritmética&quot;&gt;La media aritmética&lt;/h4&gt;
&lt;p&gt;La &lt;strong&gt;media aritmética&lt;/strong&gt;  ( &lt;script type=&quot;math/tex&quot;&gt;\overline{x}&lt;/script&gt; ) de una serie de valores positivos
&lt;script type=&quot;math/tex&quot;&gt;x_1, x_2 \dots x_n&lt;/script&gt; es su promedio.
Generaliza el punto medio entre dos valores &lt;script type=&quot;math/tex&quot;&gt;\overline{x} = \frac{x_1+x_2}{2}&lt;/script&gt;,
definiendo un centro de gravedad que minimiza las desviaciones:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{n} \sum_{i=1}^n x_i = \frac{x_1 + x_2 + \dots + x_n}{n}&lt;/script&gt;

&lt;p&gt;Y podemos tomar una &lt;strong&gt;media aritmética ponderada&lt;/strong&gt; otorgando a cada valor un peso
específico &lt;script type=&quot;math/tex&quot;&gt;\{w_i\}&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \frac{\sum_{i=1}^n x_iw_i}{\sum_{i=1}^n w_i} = \frac{x_1w_1 + x_2w_2 + \dots + x_nw_n}{w_1+w_2+\dots+w_n}&lt;/script&gt;

&lt;p&gt;Aquí la media aritmética surge como caso particular tomando pesos: &lt;script type=&quot;math/tex&quot;&gt;w_i = \frac{1}{n}&lt;/script&gt;.&lt;/p&gt;

&lt;h4 id=&quot;la-media-geométrica&quot;&gt;La media geométrica&lt;/h4&gt;
&lt;p&gt;La &lt;strong&gt;media geométrica&lt;/strong&gt; generaliza el punto que es al menor como el mayor es a él
&lt;script type=&quot;math/tex&quot;&gt;\frac{x_1}{g} = \frac{g}{x_2}&lt;/script&gt;. Sería el lado del hipercubo que tuviera
igual volumen al hiperrectángulo que tiene como lados los valores dados:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \sqrt[n]{\prod_{i=1}^n x_i} = \sqrt[n]{x_1x_2 \dots x_n}&lt;/script&gt;

&lt;p&gt;En su versión ponderada:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \left( \prod_{i=1}^n x_i^{w_i} \right)^{\frac{1}{\sum_{i=1}^n w_i}} = \sqrt[w_1+w_2+ \dots +w_n]{  x_1^{w_1} x_2^{w_2} \dots x_n^{w_n} }&lt;/script&gt;

&lt;h4 id=&quot;la-media-armónica&quot;&gt;La media armónica&lt;/h4&gt;
&lt;p&gt;La &lt;strong&gt;media armónica&lt;/strong&gt;, (o &lt;em&gt;harmónica&lt;/em&gt;, dependiendo de la pedantería del autor)
es inversa de la media aritmética de las inversas de los
elementos. Generaliza el punto en el que la razón de las diferencias a él
es igual a la razón entre los números: &lt;script type=&quot;math/tex&quot;&gt;\frac{x_1-h}{h-x_2} = \frac{x_1}{x_2}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Queda definida por:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \frac{n}{\sum_{i=1}^n \frac{1}{x_i}} = \frac{n}{\frac{1}{x_1} + \frac{1}{x_2} + \dots + \frac{1}{x_n}}&lt;/script&gt;

&lt;p&gt;Y en su versión ponderada por:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \frac{\sum_{i=1}^n w_i}{\sum_{i=1}^n \frac{w_i}{x_i}} = \frac{w_1+w_2+\dots+w_n}{\frac{w_1}{x_1} + \frac{w_2}{x_2} + \dots + \frac{w_n}{x_n}}&lt;/script&gt;

&lt;p&gt;Además, en un acorde mayor, la frecuencia de nota intermedia es la media armónica de las
otras dos notas que componen el acorde. Por ejemplo, el en el acorde de La Mayor
&lt;script type=&quot;math/tex&quot;&gt;\mathtt{La-Do\#-Mi}&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{array}{l|c}
\text{Nota} &amp; \text{Frecuencia} \\
\hline
\text{La} &amp; \mathtt{440Hz} \\
\text{Do#} &amp; \mathtt{528Hz} \\
\text{Mi} &amp; \mathtt{660Hz} \\
\end{array} %]]&gt;&lt;/script&gt;

&lt;h4 id=&quot;la-media-cuadrática&quot;&gt;La media cuadrática&lt;/h4&gt;
&lt;p&gt;La &lt;strong&gt;media cuadrática&lt;/strong&gt; es la raíz cuadrada de la media aritmética de los cuadrados
de los elementos. Queda definida por:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \sqrt{\frac{\sum_{i=1}^n x_i^2}{n}} = \sqrt{\frac{x_1^2 + x_2^2 + \dots + x_n^2}{n}}&lt;/script&gt;

&lt;p&gt;Y en su versión ponderada como:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \sqrt{\frac{\sum_{i=1}^n x_i^2w_i}{\sum_{i=1}^n w_i}} = \sqrt{\frac{x_1^2w_1 + x_2^2w_2 + \dots + x_n^2w_n}{w_1+w_2+\dots+w_n}}&lt;/script&gt;

&lt;p&gt;La desviación típica, por ejemplo, se define como la media cuadrática de las
desviaciones respecto a la media.&lt;/p&gt;

&lt;h3 id=&quot;medias-de-hölder&quot;&gt;Medias de Hölder&lt;/h3&gt;

&lt;p&gt;Las medias de Hölder generalizan estas medias básicas. &lt;sup id=&quot;fnref:holdermean&quot;&gt;&lt;a href=&quot;#fn:holdermean&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
La media de Hölder de exponente &lt;script type=&quot;math/tex&quot;&gt;p \in \mathbb{R} \cup \{+\infty, -\infty\}&lt;/script&gt;, para &lt;script type=&quot;math/tex&quot;&gt;x \in (\mathbb{R}^+)^n&lt;/script&gt; es de la forma:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M_p ({x}) = \left(\frac{1}{n}\sum_{i=1}^n x_i^p \right)^{\frac{1}{p}}&lt;/script&gt;

&lt;p&gt;Tomando límites para definirla cuando sea necesario:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M_0 ({x}) = \lim_{p \to 0} M_p(x)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M_{+\infty} ({x}) = \lim_{p \to +\infty} M_p(x)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M_{-\infty} ({x}) = \lim_{p \to -\infty} M_p(x)&lt;/script&gt;

&lt;p&gt;Las medias anteriores, así como el máximo y el mínimo son casos particulares
de las medias de Hölder. Además de los casos triviales, puede demostrarse
como ejercicio que los casos &lt;script type=&quot;math/tex&quot;&gt;0,+\infty,-\infty&lt;/script&gt; efectivamente se corresponden
con la media geométrica, el máximo y el mínimo.  &lt;sup id=&quot;fnref:gmeanproof&quot;&gt;&lt;a href=&quot;#fn:gmeanproof&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{array}{l|c|c}
\mathbf{Media} &amp; \mathbf{Exponente} &amp; \mathbf{Expresión} \\[1.5em]
\hline
\text{Mínimo} &amp; p=-\infty &amp; \min_i{(x_i)} \\[1em]
\text{Armónica} &amp; p=-1 &amp; \frac{n}{\frac{1}{x_1} + \frac{1}{x_2} + \dots + \frac{1}{x_n}} \\[1em]
\text{Geométrica} &amp; p=0 &amp;  \sqrt[n]{x_1x_2 \dots x_n} \\[1.5em]
\text{Aritmética} &amp; p=1 &amp; \frac{x_1 + x_2 + \dots + x_n}{n} \\[1em]
\text{Cuadrática} &amp; p=2 &amp; \sqrt{\frac{x_1^2 + x_2^2 + \dots + x_n^2}{n}}\\[1em]
\text{Máximo} &amp; p=\infty &amp;  \max_i{(x_i)} \\[1em]
\end{array} %]]&gt;&lt;/script&gt;

&lt;p&gt;Podemos notar que las medias de Hölder para &lt;script type=&quot;math/tex&quot;&gt;p \geq 1&lt;/script&gt; son normas en
&lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^n&lt;/script&gt; si se aplican sobre el vector de valores absolutos.
Las normas asociadas a &lt;script type=&quot;math/tex&quot;&gt;p=1&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;p=2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;p=+\infty&lt;/script&gt; son
proporcionales a las normas de la suma, euclídea y del máximo, respectivamente.
En general se puede definir la media de exponente &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; como:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vert\vert x\vert\vert_p =  M_p(\vert x\vert) \sqrt[p]{n}&lt;/script&gt;

&lt;h2 id=&quot;la-desigualdad&quot;&gt;La desigualdad&lt;/h2&gt;

&lt;h3 id=&quot;medias-aritmética-y-geométrica&quot;&gt;Medias aritmética y geométrica&lt;/h3&gt;

&lt;p&gt;Las medias aritmética y geométrica cumplen la siguiente desigualdad, que se
convierte en igualdad si y sólo si todos los términos son iguales:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sqrt[n]{x_1x_2 \dots x_n} \leq \frac{x_1+x_2+\dots+x_n}{n}&lt;/script&gt;

&lt;p&gt;Existen muchas demostraciones de la desigualdad, en Wikipedia se da una
&lt;a href=&quot;https://es.wikipedia.org/wiki/Desigualdad_de_las_medias_aritm%C3%A9tica_y_geom%C3%A9trica&quot;&gt;demostración inductiva&lt;/a&gt;.
Para usar resultados más propios de Cálculo I, puede usarse la siguiente demostración:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tenemos que el logaritmo es una función creciente, biyectiva y convexa. Por ser
convexa se cumple la desigualdad siguiente:&lt;/em&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{ln(x_1)+ln(x_2)+\dots+ln(x_n)}{n} \leq ln\left(\frac{x_1+x_2+\dots+x_n}{n}\right)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;ln\left(\sqrt[n]{x_1x_2 \dots x_n}\right) \leq ln\left(\frac{x_1+x_2+\dots+x_n}{n}\right)&lt;/script&gt;

&lt;p&gt;&lt;em&gt;Sabiendo además que es creciente, se obtiene la desigualdad buscada, con caso
de igualdad cuando todos los términos son iguales.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;la-desigualdad-de-las-medias&quot;&gt;La desigualdad de las medias&lt;/h3&gt;

&lt;p&gt;La desigualdad de las medias usual incluye a las medias armónica y geométrica.
Como ejercicio, puede demostrarse la desigualdad armónica-geométrica desde la
geométrica-aritmética y la desigualdad aritmética-cuadrática desde la desigualdad
de &lt;a href=&quot;http://es.wikipedia.org/wiki/Desigualdad_de_Cauchy-Schwarz&quot;&gt;Cauchy-Schwarz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La desigualdad completa queda como:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{n}{\frac{1}{x_1} + \frac{1}{x_2} + \dots + \frac{1}{x_n}} \leq \sqrt[n]{x_1x_2 \dots x_n} \leq \frac{x_1+x_2+\dots+x_n}{n} \leq \sqrt{\frac{x_1^2+x_2^2+\dots+x_n^2}{n}}&lt;/script&gt;

&lt;h3 id=&quot;desigualdad-con-medias-de-hölder&quot;&gt;Desigualdad con medias de Hölder&lt;/h3&gt;

&lt;p&gt;Todavía puede generalizarse más, notando que, fijado un vector
&lt;script type=&quot;math/tex&quot;&gt;x \in (\mathbb{R^+})^n&lt;/script&gt;, la siguiente función &lt;script type=&quot;math/tex&quot;&gt;f: \mathbb{R} \to \mathbb{R}&lt;/script&gt; es creciente:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
f(a) = \left\{ \begin{matrix} \left(\frac{x_1^a+x_2^a+\dots+x_n^a}{n}\right)^{1/a} &amp; si &amp; a \neq 0 \\ \displaystyle \sqrt[n]{x_1x_2 \dots x_n} &amp; si &amp; a = 0\end{matrix} \right. %]]&gt;&lt;/script&gt;

&lt;p&gt;Pueden hallarse varias demostraciones de la desigualdad. En particular, puede
probarse fácilmente desde la desigualdad de Jensen, la misma que hemos usado para
probar la desigualdad entre medias geométrica y aritmética. &lt;sup id=&quot;fnref:generalproof&quot;&gt;&lt;a href=&quot;#fn:generalproof&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;cálculo-de-extremos&quot;&gt;Cálculo de extremos&lt;/h2&gt;

&lt;p&gt;Como ejemplos, tomamos dos ejercicios de los apuntes de &lt;a href=&quot;http://www.ugr.es/~fjperez/textos/Calculo_Diferencial_Varias_Variables.pdf&quot;&gt;Cálculo diferencial en
una y varias variables&lt;/a&gt;,
de Francisco Javier Pérez. Ambos se refieren a hallar extremos en el volumen de
figuras geométricas. Como la desigualdad de las medias llega a la igualdad cuando
todos los términos son iguales, las soluciones suelen ser aquellas que igualan lados
o dotan de algún tipo de simetría a la figura.&lt;/p&gt;

&lt;h3 id=&quot;maximizando-el-área&quot;&gt;Maximizando el área&lt;/h3&gt;

&lt;p&gt;La utilidad de la desigualdad viene dada precisamente por el caso de igualdad,
que permite hallar el extremo absoluto de la suma dado el producto o viceversa.
Puede verse en el siguiente problema:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hallar, entre todos los rectángulos de perímetro 4, aquel con área máxima.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Llamando &lt;script type=&quot;math/tex&quot;&gt;a,b&lt;/script&gt; a los lados y &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; al perímetro, aplicamos la desigualdad
entre las medias geométrica y aritmética:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A = ab = \left(\sqrt{ab}\right)^2 \leq \left(\frac{a+b}{2}\right)^2 = \left(\frac{1}{4}p\right)^2 = 1&lt;/script&gt;

&lt;p&gt;Hemos acotado el área posible. Y como el caso de igualdad se da con la igualdad
entre términos, tenemos &lt;script type=&quot;math/tex&quot;&gt;a=b=1&lt;/script&gt;.&lt;/p&gt;

&lt;h3 id=&quot;minimizando-el-volumen&quot;&gt;Minimizando el volumen&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Trazar un plano que pase por el punto &lt;script type=&quot;math/tex&quot;&gt;(1,2,3)&lt;/script&gt; y que forme con los ejes
coordenados un tetraedro de volumen mínimo.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El plano podrá ser escrito como:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{x}{a} + \frac{y}{b} + \frac{z}{c} - 1 = 0&lt;/script&gt;

&lt;p&gt;Y para que contenga al punto pedido, deberá cumplirse que:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{1}{a} + \frac{2}{b} + \frac{3}{c} - 1 = 0&lt;/script&gt;

&lt;p&gt;Como el plano cortará a los ejes en los puntos &lt;script type=&quot;math/tex&quot;&gt;(a,0,0)&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;(0,b,0)&lt;/script&gt; y &lt;script type=&quot;math/tex&quot;&gt;(0,0,c)&lt;/script&gt;,
el área del tetraedro formado será &lt;script type=&quot;math/tex&quot;&gt;V=\frac{1}{3}\left(\frac{1}{2}ab\right)c&lt;/script&gt;.
La acotaremos usando desigualdad entre las medias geométrica y armónica:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;V = a\frac{b}{2}\frac{c}{3} = \left( \sqrt[3]{a\frac{b}{2}\frac{c}{3}} \right)^3 \geq \left( \frac{3}{a + \frac{b}{2} + \frac{c}{3}} \right)^3 = 27&lt;/script&gt;

&lt;p&gt;Dándose el caso de igualdad con la igualdad entre elementos, es decir:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a = \frac{b}{2} = \frac{c}{3}&lt;/script&gt;

&lt;p&gt;Luego &lt;script type=&quot;math/tex&quot;&gt;a=3, b=6, c=9&lt;/script&gt;.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:holdermean&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Generalized_mean&quot;&gt;Medias de Hölder&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:holdermean&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:gmeanproof&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://planetmath.org/sites/default/files/texpdf/35741.pdf&quot;&gt;Derivación de la media geométrica como media de Hölder&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:gmeanproof&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:generalproof&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://planetmath.org/sites/default/files/texpdf/33619.pdf&quot;&gt;Demostración de la desigualdad de las medias generalizada&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:generalproof&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-4-12-desigualdad-medias/</link>
            <guid isPermaLink="true">/blog/2014-4-12-desigualdad-medias/</guid>
        </item>
        
        <item>
            <title>Introducción a JavaScript. Programación con prototipos</title>
            <description>&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;JavaScript (JS) es el lenguaje de programación desarrollado por Netscape para
la web&lt;sup id=&quot;fnref:jsannouncement&quot;&gt;&lt;a href=&quot;#fn:jsannouncement&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Se trata de un lenguaje de script,
generalmente interpretado por el navegador del usuario, esto es, se ejecuta en
el &lt;em&gt;cliente&lt;/em&gt;&lt;sup id=&quot;fnref:mdnjs&quot;&gt;&lt;a href=&quot;#fn:mdnjs&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Hablamos del cliente refiriéndonos a la máquina del usuario final
que visitará el sitio web, y del servidor para referirnos a la máquina o el
conjunto de ellas que lo almacenan y proporcionan. Sin embargo, también se
puede utilizar JavaScript como lenguaje de servidor gracias a
&lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;JavaScript tiene una sintaxis similar a la de C++ o Java, y puede funcionar como
un lenguaje procedimental o como uno orientado a objetos. Además, es capaz de
responder a eventos generados mediante la interacción del usuario, lo que es
generalmente una de sus principales funciones.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Nota&lt;/dt&gt;
  &lt;dd&gt;Pese al nombre, JavaScript no deriva de Java, los dos lenguajes apenas
se parecen, exceptuando el aspecto de la sintaxis. De hecho, se llamó &lt;em&gt;Mocha&lt;/em&gt; y
&lt;em&gt;LiveScript&lt;/em&gt; antes de obtener su nombre definitivo.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Para ejecutar tu propio código JavaScript, pulsa F12 o Ctrl-Mayus-C en tu
navegador. En las herramientas de desarrollador tendrás una consola JS
interactiva disponible para experimentar.
Es importante notar que cada navegador implementa JavaScript de una manera
ligeramente distinta, luego puede haber peculiaridades en la forma de
aprovechar algunos recursos del navegador. El estándar del lenguaje se
denomina &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf&quot;&gt;ECMAScript&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;sintaxis-y-tipos&quot;&gt;Sintaxis y tipos&lt;/h2&gt;

&lt;h3 id=&quot;declaraciones-variables-y-funciones&quot;&gt;Declaraciones, variables y funciones&lt;/h3&gt;

&lt;p&gt;JavaScript no es fuertemente tipado, por lo que declaramos las variables
simplemente con la palabra reservada &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;.  Declaramos una constante con
&lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;/code&gt; y una función con &lt;code class=&quot;highlighter-rouge&quot;&gt;var ... = function()&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;function ...()&lt;/code&gt;.  También podemos declarar
variables simplemente con una asignación, pero
entonces serán globales, lo que es equivalente a  declararlas fuera de
cualquier función (las variables y funciones globales se convierten en
atributos del objeto &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;una&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.141592&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perimetro_circulo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Esta variable no estaba declarada antes,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// así que es global&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tau&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tau&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Otra forma de declarar funciones&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;area_circulo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;dl&gt;
  &lt;dt&gt;Nota&lt;/dt&gt;
  &lt;dd&gt;JavaScript acepta ciertos símbolos a la hora de nombrar variables. Un
 nombre de variable no puede empezar por un número, pero sí que puede
 comenzar y contener símbolos como &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; o incluso &lt;script type=&quot;math/tex&quot;&gt;\pi&lt;/script&gt; &lt;sup id=&quot;fnref:jsidentifiers&quot;&gt;&lt;a href=&quot;#fn:jsidentifiers&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;colecciones-y-objetos&quot;&gt;Colecciones y objetos&lt;/h3&gt;
&lt;p&gt;En JS utilizamos los corchetes para representar arrays. Estos pueden
contener objetos de distinta naturaleza, por ejemplo, el siguiente array
es completamente válido:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lido&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hola&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Los objetos son uno de los pilares de JS. En este lenguaje, los objetos
existen, no se crean como instancias de una clase, por lo que podemos declarar
nuevos con la siguiente sintaxis:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;un_objeto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dato&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;valor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;otro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;una_funcion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Acceso a datos:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;un_objeto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;otro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;un_objeto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dato&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; &quot;valor&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;un_objeto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;una_funcion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La forma en que se define el objeto es conocida como &lt;em&gt;JavaScript Object
Notation&lt;/em&gt; (JSON). Un objeto puede funcionar como un
diccionario, de la forma &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;clave:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;valor&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;clave2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;otro&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;. Solemos llamar
&lt;em&gt;propiedad&lt;/em&gt; a cada una de las parejas &lt;em&gt;clave-valor&lt;/em&gt; de un objeto.&lt;/p&gt;

&lt;h3 id=&quot;tipos&quot;&gt;Tipos&lt;/h3&gt;
&lt;p&gt;JavaScript tiene algunos tipos básicos: &lt;code class=&quot;highlighter-rouge&quot;&gt;Number&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Boolean&lt;/code&gt;.
El resto de objetos (los de &lt;code class=&quot;highlighter-rouge&quot;&gt;Date&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp&lt;/code&gt;…) serán de tipo
&lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt;, y las funciones y constructores son de tipo &lt;code class=&quot;highlighter-rouge&quot;&gt;Function&lt;/code&gt;.
Se puede comprobar el tipo de un objeto mediante &lt;code class=&quot;highlighter-rouge&quot;&gt;typeof&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; Number&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; Object&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; Function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Además, se utilizan algunas palabras para identificar variables nulas y
no inicializadas: &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;, respectivamente. Para indicar
resultados de operaciones matemáticas no válidas se usa &lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt; (o &lt;code class=&quot;highlighter-rouge&quot;&gt;Infinity&lt;/code&gt;,
en caso de divisiones por 0 o números demasiado grandes):&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sin_inicializar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sin_inicializar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; undefined&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; NaN&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; Infinity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;control-de-flujo&quot;&gt;Control de flujo&lt;/h3&gt;
&lt;p&gt;Disponemos de las mismas estructuras que en el resto de lenguajes similares:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if-else&lt;/li&gt;
  &lt;li&gt;for&lt;/li&gt;
  &lt;li&gt;for-in&lt;/li&gt;
  &lt;li&gt;while&lt;/li&gt;
  &lt;li&gt;do-while&lt;/li&gt;
  &lt;li&gt;switch-case&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La estructura &lt;em&gt;for-in&lt;/em&gt; es algo diferente de sus equivalentes en C++ y Java,
y además de arrays nos permite recorrer las propiedades de cualquier objeto:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;recetas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Paella&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ingrediente_principal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;arroz&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tortilla&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ingrediente_principal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;huevo&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bocata&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ingrediente_principal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pan&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;recetas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// i referencia al índice!&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Receta nº &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dato&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;recetas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// dato referencia la clave&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dato&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;recetas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dato&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tenemos dos comparaciones de igualdad, una que convierte tipos implícitamente
para comparar el contenido, y otra que es estricta con los tipos:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;POLO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Comparación de igualdad:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;POLO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;28&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Comparación de igualdad y tipo:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;POLO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;28&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; false (&quot;28&quot; es String)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Por último, también podemos usar los operadores lógicos &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; para control
de flujo, algo muy utilizado para escribir código compatible con todos los
navegadores:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;identificador&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Cada navegador aceptará innerText o textContent&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;texto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;el-document-object-model&quot;&gt;El Document Object Model&lt;/h2&gt;

&lt;h3 id=&quot;acceso-a-los-nodos-html&quot;&gt;Acceso a los nodos HTML&lt;/h3&gt;
&lt;p&gt;Desde luego, si nuestro objetivo es modificar contenido en un sitio web e
interactuar con el usuario, es necesario algo más que todo esto. Para esta tarea
disponemos del &lt;em&gt;Document Object Model&lt;/em&gt; o DOM, que básicamente se encarga de
proveer la información de la página web de una forma que sea consistente con el
lenguaje.&lt;/p&gt;

&lt;p&gt;Así, tendremos disponibles una serie de objetos, partiendo de &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;,
que nos proporcionarán acceso, entre otros, a lo siguiente:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;: Es el padre de todos los objetos del documento. Es indistinto acceder
a &lt;code class=&quot;highlighter-rouge&quot;&gt;window.objeto&lt;/code&gt; y a &lt;code class=&quot;highlighter-rouge&quot;&gt;objeto&lt;/code&gt;. Si declaramos una variable fuera de una función
queda como objeto hijo de &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;: Título de la página.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;location&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;location.href&lt;/code&gt;: URL de la página.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;location.hash&lt;/code&gt;: &lt;em&gt;hash&lt;/em&gt; (la parte del URL que viene después del símbolo &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt;: Acceso a los nodos HTML del documento.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.getElementByID(identificador)&lt;/code&gt;: Obtiene un nodo mediante el
  identificador HTML (atributo &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;).&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.querySelector(selector)&lt;/code&gt;: Obtiene un nodo mediante un selector
  estilo CSS.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.createElement(tipo)&lt;/code&gt;: Crea un nuevo nodo HTML del tipo
  especificado.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;dl&gt;
  &lt;dt&gt;Nota&lt;/dt&gt;
  &lt;dd&gt;El DOM sólo está disponible cuando se ejecuta JavaScript en una página HTML en
 el cliente. No existe en otros intérpretes de JS como &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino&quot;&gt;Rhino&lt;/a&gt; ni en la parte de servidor como en &lt;a href=&quot;http://nodejs.org/&quot;&gt;node.js&lt;/a&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;eventos&quot;&gt;Eventos&lt;/h3&gt;
&lt;p&gt;Además, para responder a interacciones del usuario disponemos de eventos, es decir, podemos asociar
funciones a acciones de tipo &lt;em&gt;click&lt;/em&gt;, &lt;em&gt;key press&lt;/em&gt;, &lt;em&gt;drag&lt;/em&gt;, etc. de forma que la página web
responda ante ellas. Por ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Nodo HTML: --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mi_boton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Púlsame&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alerta_click&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// this referencia al nodo que responde al evento&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Has pulsado el botón &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#mi_boton&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alerta_click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Otra forma:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#mi_boton&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alerta_click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Mucho más sobre eventos en &lt;sup id=&quot;fnref:quirksevents&quot;&gt;&lt;a href=&quot;#fn:quirksevents&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;orientación-a-objetos-los-prototipos&quot;&gt;Orientación a objetos: Los prototipos&lt;/h2&gt;

&lt;h3 id=&quot;construyendo-objetos&quot;&gt;Construyendo objetos&lt;/h3&gt;

&lt;p&gt;JavaScript está orientado a objetos, literalmente. No existen las clases en este lenguaje,
sino que podemos crear objetos a partir de otros que llamamos &lt;em&gt;prototipos&lt;/em&gt;, que están
asociados a funciones constructoras. Estas funciones son idénticas a
cualquier otra, salvo por que no devuelven un valor, y en su lugar obtenemos un objeto
al utilizarlas con &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;. Veamos un ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// El constructor&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Definimos un método en el prototipo&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reproducir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Reproduciendo &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; de &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Creamos un objeto con el constructor&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;una_cancion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Clocks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Coldplay&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;una_cancion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reproducir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; &quot;Reproduciendo Clocks de Coldplay&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Mediante la función constructora &lt;code class=&quot;highlighter-rouge&quot;&gt;Cancion&lt;/code&gt; hemos creado un prototipo vacío (en &lt;code class=&quot;highlighter-rouge&quot;&gt;Cancion.prototype&lt;/code&gt;), al que
después hemos añadido el método &lt;code class=&quot;highlighter-rouge&quot;&gt;reproducir&lt;/code&gt;. Al utilizar el prototipo como plantilla,
cada objeto que se cree mediante &lt;code class=&quot;highlighter-rouge&quot;&gt;new Cancion(...)&lt;/code&gt; dispondrá del método. Aun así,
también podemos añadir otros métodos y atributos a cualquier objeto independientemente
del prototipo con que se haya creado.&lt;/p&gt;

&lt;h3 id=&quot;visibildad-de-datos&quot;&gt;Visibildad de datos&lt;/h3&gt;

&lt;p&gt;Otra peculiaridad de la orientación a objetos de JS es la falta de encapsulación. Un
dato miembro de un objeto, declarado con &lt;code class=&quot;highlighter-rouge&quot;&gt;this.dato&lt;/code&gt; es visible en cualquier ámbito:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hans Zimmer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Podemos modificar los datos miembro, e incluso los métodos&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;inception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Mombasa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;inception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reproducir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Banda sonora épica&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Una alternativa para ocultar información es utilizar variables en el constructor, de
forma que solo están visibles en el ámbito de la función constructora. El problema es
que entonces no estarán visibles para los métodos que declaremos en el prototipo.
Podemos sin embargo definir &lt;em&gt;getters&lt;/em&gt; dentro del constructor, y utilizarlos en los métodos:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Cancion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reproducir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Reproduciendo &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; de &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora las variables &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;artist&lt;/code&gt; no son visibles ni modificables fuera del constructor, pero se pueden
consultar mediante los métodos &lt;code class=&quot;highlighter-rouge&quot;&gt;nombre()&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;artista()&lt;/code&gt; respectivamente. Esto funciona
porque aunque la función constructora se termine de ejecutar, las variables declaradas
no desaparecen, y permanecen disponibles en los métodos &lt;em&gt;getters&lt;/em&gt;.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Nota&lt;/dt&gt;
  &lt;dd&gt;La diferencia entre declarar métodos en el prototipo y declararlos en el constructor
(con &lt;code class=&quot;highlighter-rouge&quot;&gt;this.metodo&lt;/code&gt;) es que los del prototipo se definen una vez y se aplican a todos los
objetos, mientras que los del constructor se definen para cada objeto creado, lo cual
es menos eficiente. Por eso es preferible declarar los métodos en el prototipo&lt;sup id=&quot;fnref:jsencapsulation&quot;&gt;&lt;a href=&quot;#fn:jsencapsulation&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;herencia&quot;&gt;Herencia&lt;/h3&gt;

&lt;p&gt;Como era de esperar, la herencia en JavaScript también es bastante particular. No existe
una forma directa de hacer que una función “herede” de otra, por lo que no podemos crear
constructores a partir de constructores anteriores. Sin embargo, podemos escribir constructores
cuyo prototipo asociado sea una instancia de uno ya existente&lt;sup id=&quot;fnref:jsinheritance&quot;&gt;&lt;a href=&quot;#fn:jsinheritance&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Creando objeto de la clase padre&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;metodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Este método se heredará&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// Constructor nuevo&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Este es el constructor de la clase hija&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Usamos el prototipo de la clase padre&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...pero asociándolo al constructor de la clase hija&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Podemos añadir métodos&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nuevo_metodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Solo en la clase hija&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;partest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;partest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; false&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chitest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;chitest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;chitest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// --&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En este ejemplo hemos creado dos constructores, uno con prototipo
propio, y otro al que asociamos un objeto creado a partir del primer
prototipo. Comprobamos mediante &lt;code class=&quot;highlighter-rouge&quot;&gt;instanceof&lt;/code&gt; que la herencia funciona
como se esperaba, un objeto creado mediante &lt;code class=&quot;highlighter-rouge&quot;&gt;Child&lt;/code&gt; es instancia de este
constructor y del padre, &lt;code class=&quot;highlighter-rouge&quot;&gt;Parent&lt;/code&gt;, y dispone de los métodos de ambos en
su prototipo.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;En este artículo hemos visto cómo funciona JavaScript y cómo interactúa
con un sitio web, y hemos estudiado sus posibilidades desde el punto de vista
de la orientación a objetos. Si queréis saber más sobre el lenguaje y
aprender a programar en él, serán muy útiles las referencias a páginas web, y
os puedo recomendar el libro &lt;sup id=&quot;fnref:jslibroalarcon&quot;&gt;&lt;a href=&quot;#fn:jslibroalarcon&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;, algo anticuado ya pero
muy completo y conciso.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:jsannouncement&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20070916144913/http://wp.netscape.com/newsref/pr/newsrelease67.html&quot;&gt;Netscape and Sun announce JavaScript. Press Release&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:jsannouncement&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:mdnjs&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/About_JavaScript&quot;&gt;About JavaScript - Mozilla Developer Network&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:mdnjs&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jsidentifiers&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://mathiasbynens.be/notes/javascript-identifiers&quot;&gt;Valid JavaScript variable names - Mathias Bynens&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:jsidentifiers&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:quirksevents&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot;&gt;Introduction to Events - Quirks Mode&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:quirksevents&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jsencapsulation&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://aboutcode.net/2011/10/04/efficient-encapsulation-of-javascript-objects.html&quot;&gt;Efficient encapsulation of JavaScript objects&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:jsencapsulation&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jsinheritance&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://tobyho.com/2010/11/22/javascript-constructors-and/&quot;&gt;Javascript Constructors and Prototypes - Toby Ho&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:jsinheritance&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jslibroalarcon&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://books.google.es/books?id=IJBXNQAACAAJ&quot;&gt;JavaScript - Revisado y actualizado 2004&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jm_alarcon&quot;&gt;José Manuel Alarcón&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:jslibroalarcon&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Tue, 24 Jun 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-6-24-introduccion-javascript/</link>
            <guid isPermaLink="true">/blog/2014-6-24-introduccion-javascript/</guid>
        </item>
        
        <item>
            <title>Introducción a Haskell</title>
            <description>&lt;p&gt;El lenguaje de programación Haskell es uno de los lenguajes puramente
funcionales más utilizados. &lt;sup id=&quot;fnref:rankingtiobe&quot;&gt;&lt;a href=&quot;#fn:rankingtiobe&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Se creó en los años 1980 para reunir las
características de los múltiples lenguajes funcionales en un sólo lenguaje. &lt;sup id=&quot;fnref:haskellwikipedia&quot;&gt;&lt;a href=&quot;#fn:haskellwikipedia&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Es un lenguaje basado en funciones puras y permitiendo el paso de
funciones como argumentos a funciones de orden superior. Y es un lenguaje
fuertemente tipificado, que comprueba todos los tipos en tiempo de compilación.&lt;/p&gt;

&lt;p&gt;A los repositorios del doble grado hemos subido unos apuntes de introducción
a Haskell con su código fuente bajo licencia CC BY-NC-SA 3.0:
&lt;a href=&quot;https://github.com/libreim/haskell#Íntroducción-a-haskell&quot;&gt;Introducción a Haskell&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:rankingtiobe&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&quot;&gt;TIOBE - Programming Community Index&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:rankingtiobe&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:haskellwikipedia&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Haskell_%28programming_language%29&quot;&gt;Haskell - Wikipedia, the free encyclopedia&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:haskellwikipedia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-10-1-intro-haskell/</link>
            <guid isPermaLink="true">/blog/2014-10-1-intro-haskell/</guid>
        </item>
        
        <item>
            <title>Introducción a la teoría de categorías</title>
            <description>&lt;p&gt;Los primeros desarrollos de la teoría de categorías vinieron impulsados en los
años 40 para cubrir necesidades del álgebra homológica. La posterior teoría
general de categorías fue una actualización del álgebra universal, que estudiaba
las características comunes de diversas estructuras algebraicas. &lt;sup id=&quot;fnref:categoriaswikipedia&quot;&gt;&lt;a href=&quot;#fn:categoriaswikipedia&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;En los repositorios del doble grado hay unos apuntes de introducción
a la Teoría de Categorías con su código fuente bajo licencia CC BY-NC-SA 3.0. En
ellos se explican tipos de morfismos y propiedades universales. Se
hace especial hincapié en productos y coproductos y se pasan a explicar
los functores y las transformaciones naturales. El objetivo no es aportar
otra explicación formal de la teoría de categorias, sino dar una idea
general de los conceptos básicos:&lt;br /&gt;
&lt;a href=&quot;https://github.com/libreim/introCategorias&quot;&gt;Introducción a la Teoría de Categorías&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:categoriaswikipedia&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://es.wikipedia.org/wiki/Teor%C3%ADa_de_categor%C3%ADas&quot;&gt;Teoría de Categorías - Wikipedia, the free encyclopedia&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:categoriaswikipedia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Sat, 04 Oct 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-10-4-intro-categorias/</link>
            <guid isPermaLink="true">/blog/2014-10-4-intro-categorias/</guid>
        </item>
        
        <item>
            <title>Algoritmos de clasificación en Minería de datos</title>
            <description>&lt;p&gt;La Minería de datos es el análisis de datos para tratar de encontrar
patrones no triviales que aporten información útil. En concreto, el
Problema de clasificación implica aprender las relaciones entre los
datos que se poseen para predecir características de datos futuros.&lt;/p&gt;

&lt;p&gt;Se han redactado unos apuntes sobre clasificación y los algoritmos
más utilizados para tratar el problema, disponibles en el &lt;a href=&quot;http://github.com/libreim/data-mining-classification/&quot;&gt;repositorio
correspondiente de la organización del Doble Grado&lt;/a&gt;
en GitHub. En ellos se dan las definiciones pertinentes, se distinguen
modalidades del problema y se explican técnicas y algoritmos para
generar clasificadores. Se comparten bajo la licencia &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC BY-SA 4.0&lt;/a&gt;.&lt;/p&gt;
</description>
            <pubDate>Sun, 19 Oct 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-10-19-data-mining/</link>
            <guid isPermaLink="true">/blog/2014-10-19-data-mining/</guid>
        </item>
        
        <item>
            <title>Algoritmos Genéticos</title>
            <description>&lt;p&gt;El objetivo de un matemático e informático consiste en resolver problemas. Los problemas de optimización son un claro ejemplo de cuestiones resolubles mediante la aplicación conjunta de la informática y las matemáticas. Sin embargo, existen algunos problemas de optimización (como el &lt;em&gt;problema del viajante de comercio&lt;/em&gt; y todos aquellos que sean NP Hard) para los que no se conoce ningún algoritmo polinomial que los resuelva. En estos casos la aplicación de algoritmos exactos que recorran de forma óptima todo el conjunto de soluciones no es viable por el tiempo necesario. Tenemos que recurrir a otras herramientas: las &lt;strong&gt;heurísticas&lt;/strong&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Dado determinado problema de optimización, una &lt;strong&gt;heurística&lt;/strong&gt; es un proceso que calcula una solución que satisface determinados criterios de calidad. Puede no calcular la mejor solución posible. Sin embargo, sí intenta que esta sea suficiente para nuestros objetivos manteniendo una eficiencia aceptable.&lt;/p&gt;

&lt;p&gt;Los &lt;strong&gt;algoritmos genéticos&lt;/strong&gt; son heurísticas basadas en poblaciones y en los conceptos de evolución y genética. En la naturaleza, las poblaciones de individuos evolucionan con el tiempo gracias a tres factores: la &lt;strong&gt;selección natural&lt;/strong&gt;, la &lt;strong&gt;reproducción&lt;/strong&gt; y la &lt;strong&gt;mutación&lt;/strong&gt;. Los algoritmos genéticos imitan estos procesos para conseguir evolucionar una población de soluciones iniciales.&lt;/p&gt;

&lt;p&gt;En los repositorios del doble grado se encuentran unos &lt;a href=&quot;https://github.com/libreim/AlgoritmosGeneticos&quot;&gt;apuntes&lt;/a&gt; que explican el funcionamiento de estos algoritmos de forma detallada. Se encuentran protegidos bajo licencia &lt;a href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot;&gt;CC BY-NC 4.0&lt;/a&gt;.&lt;/p&gt;
</description>
            <pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-11-8-algoritmos-geneticos/</link>
            <guid isPermaLink="true">/blog/2014-11-8-algoritmos-geneticos/</guid>
        </item>
        
        <item>
            <title>El Isomorfismo de Curry-Howard</title>
            <description>&lt;p&gt;El isomorfismo de Curry-Howard&lt;sup id=&quot;fnref:curryhowardwiki&quot;&gt;&lt;a href=&quot;#fn:curryhowardwiki&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; relaciona los sistemas de tipos con la lógica
proposicional. Los tipos son teoremas, y las instancias de un tipo son
demostraciones del teorema que representa.&lt;/p&gt;

&lt;p&gt;A los repositorios del doble grado hemos subido unos apuntes que explican
el isomorfismo con su código fuente bajo licencia CC BY-SA 3.0:
&lt;a href=&quot;https://github.com/libreim/curryHoward&quot;&gt;Isomorfismo de Curry Howard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Los apuntes constan de una presentación general, unos apuntes más detallados,
con ejemplos en Haskell y una introducción al asistente de demostraciones Coq.
Sobre él, se explican los tipos básicos, demostraciones por inducción y demostraciones
explícitas, donde puede verse en acción la correspondencia entre tipos y proposiciones.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:curryhowardwiki&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence&quot;&gt;Curry-Howard correspondence - Wikipedia, the free encyclopedia&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:curryhowardwiki&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Thu, 04 Dec 2014 00:00:00 +0000</pubDate>
            <link>/blog/2014-12-4-curry-howard/</link>
            <guid isPermaLink="true">/blog/2014-12-4-curry-howard/</guid>
        </item>
        
        <item>
            <title>Problemas - Fibonacci GCD</title>
            <description>&lt;h2 id=&quot;enunciado-del-problema&quot;&gt;Enunciado del Problema&lt;/h2&gt;

&lt;p&gt;El problema original a resolver se encuentra en &lt;a href=&quot;https://www.hackerrank.com/contests/infinitum9/challenges/fibonacci-gcd&quot;&gt;Hackerrank&lt;/a&gt;. Se muestra a continuación una versión traducida del mismo.&lt;/p&gt;

&lt;p&gt;Los números de Fibbonacci tienen la siguiente forma:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_0 = 0&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_1 = 1&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_2 = 1&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_3 = 2&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vdots&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_n = F_{n-2} + F_{n-1}&lt;/script&gt;

&lt;p&gt;Dado un array &lt;script type=&quot;math/tex&quot;&gt;a_1,a_2,\dots,a_n&lt;/script&gt; que contiene &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; elementos, calcular &lt;script type=&quot;math/tex&quot;&gt;\gcd(F_{a_1},F_{a_2},\dots,F_{a_n})&lt;/script&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;El &lt;strong&gt;formato de entrada&lt;/strong&gt; es:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La primera línea contiene el tamaño del array, &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;En las siguientes &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; líneas hay un número, la i-ésima línea
contiene &lt;script type=&quot;math/tex&quot;&gt;a_i&lt;/script&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El &lt;strong&gt;formato de salida&lt;/strong&gt; consiste en imprimir un sólo número entero. Este es el resto de la división entera del máximo común divisor pedido entre &lt;script type=&quot;math/tex&quot;&gt;10^9+7&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Las restricciones son las siguientes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;1 \leq n \leq 2 \times 10^5&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;1 \leq a_i \leq 10^{12}&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;solución&quot;&gt;Solución&lt;/h2&gt;

&lt;p&gt;La primera observación a realizar es que, dado el tamaño que pueden tomar los
subíndices &lt;script type=&quot;math/tex&quot;&gt;a_i&lt;/script&gt;, no se pueden pretender calcular directamente los números de
Fibonacci.
Debemos obtener propiedades sobre el máximo común divisor de estos que nos
permitan calcularlo de forma indirecta. La siguiente serie de proposiciones
persigue este objetivo.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Proposición 1&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Sean &lt;script type=&quot;math/tex&quot;&gt;n, k \in \mathbb{N}&lt;/script&gt;. Se tiene que &lt;script type=&quot;math/tex&quot;&gt;F_{n+k} = F_{k-1}F_n + F_k F_{n+1}&lt;/script&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Demostración&lt;/strong&gt;
La prueba se realiza por inducción sobre &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; para un &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; arbitrario en
cada paso. Para &lt;script type=&quot;math/tex&quot;&gt;k=1&lt;/script&gt; es trivial denotando &lt;script type=&quot;math/tex&quot;&gt;F_0 = 0&lt;/script&gt;. Supongamos el
resultado cierto para &lt;script type=&quot;math/tex&quot;&gt;k \in \mathbb{N}&lt;/script&gt;.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F_{n+k+1} = F_{k-1}F_{n+1} + F_k F_{n+2} = F_{k-1}F_{n+1} + F_k (F_{n} + F_{n+1}) = F_{k}F_n + F_{k+1} F_{n+1}&lt;/script&gt;

&lt;p&gt;donde se ha utilizado en primer lugar la hipótesis de inducción para &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; y posteriormente la definición de la sucesión dos veces.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tag*{$\blacksquare$}&lt;/script&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Proposición 2&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Sean &lt;script type=&quot;math/tex&quot;&gt;n, k \in \mathbb{N}&lt;/script&gt;. Se tiene que &lt;script type=&quot;math/tex&quot;&gt;\gcd(F_n, F_{k+n}) = \gcd(F_n, F_k)&lt;/script&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Demostración&lt;/strong&gt;
En primer lugar:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\gcd(F_n, F_{n+1}) = \gcd(F_{n}, F_{n}+F_{n-1}) = \gcd(F_{n}, F_{n-1})&lt;/script&gt;

&lt;p&gt;donde se ha utilizado que &lt;script type=&quot;math/tex&quot;&gt;\gcd(a,b) = \gcd(a,b-qb)&lt;/script&gt; para cualquier &lt;script type=&quot;math/tex&quot;&gt;q&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Por inducción se llega a que&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\gcd(F_n, F_{n+1}) = \gcd(F_{1}, F_{2}) = \gcd(1,1) = 1&lt;/script&gt;

&lt;p&gt;Luego los términos consecutivos de la sucesión de Fibonacci son primos relativos entre sí.&lt;/p&gt;

&lt;p&gt;Ahora, para &lt;script type=&quot;math/tex&quot;&gt;k &gt; 1&lt;/script&gt; usamos la proposición anterior:
&lt;script type=&quot;math/tex&quot;&gt;\gcd(F_n, F_{n+k}) = \gcd(F_n, F_{k-1}F_n + F_k F_{n+1}) = \gcd(F_n, F_k F_{n+1})&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Como &lt;script type=&quot;math/tex&quot;&gt;F_n&lt;/script&gt; y &lt;script type=&quot;math/tex&quot;&gt;F_{n+1}&lt;/script&gt; son primos relativos:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\gcd(F_n, F_{n+k}) = \gcd(F_n, F_k F_{n+1}) = \gcd(F_n, F_k)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tag*{$\blacksquare$}&lt;/script&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Proposición 3&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Sean &lt;script type=&quot;math/tex&quot;&gt;a, b \in \mathbb{N}&lt;/script&gt;. Se tiene que &lt;script type=&quot;math/tex&quot;&gt;\gcd(F_a, F_b) = F_{\gcd(a, b)}&lt;/script&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Demostración&lt;/strong&gt;
Si &lt;script type=&quot;math/tex&quot;&gt;a=b&lt;/script&gt; es trivial. Supongamos que &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
a &lt; b %]]&gt;&lt;/script&gt; sin pérdida de generalidad. Tenemos que &lt;script type=&quot;math/tex&quot;&gt;\gcd(F_a, F_b) = \gcd(F_a, F_{b-a})&lt;/script&gt;. Podemos repetir el proceso hasta que aparezca un 0 en los índices. Estamos haciendo en definitiva el Algoritmo de Euclides sobre los índices y por ser el mismo proceso tenemos garantizado que el índice final no nulo es el máximo común divisor. Esto es:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\gcd(F_a, F_b) = \gcd(F_0, F_{\gcd(a,b)}) = \gcd(0, F_{\gcd(a,b)}) = F_{\gcd(a,b)}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tag*{$\blacksquare$}&lt;/script&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Proposición 4&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Sean &lt;script type=&quot;math/tex&quot;&gt;n \in \mathbb{N}&lt;/script&gt; y &lt;script type=&quot;math/tex&quot;&gt;a_1, \dots a_n \in \mathbb{N}&lt;/script&gt;. Se tiene que
&lt;script type=&quot;math/tex&quot;&gt;\gcd(F_{a_1}, \dots, F_{a_n}) = F_{\gcd(a_1, \dots, a_n)}&lt;/script&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Demostración&lt;/strong&gt;
Usaremos que &lt;script type=&quot;math/tex&quot;&gt;\gcd(b_1, \dots, b_n) = \gcd( \gcd(b_1, b_2), b_3, \dots, b_n)&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\gcd(F_{a_1}, \dots, F_{a_n}) = \gcd(\gcd(F_{a_1},F_{a_2}), F_{a_3}, \dots, F_{a_n}) = \gcd(F_{\gcd(a_1, a_2)}, F_{a_3}, \dots, F_{a_n})&lt;/script&gt;

&lt;p&gt;Repetimos el proceso &lt;script type=&quot;math/tex&quot;&gt;n-1&lt;/script&gt; veces y, usando la definición del máximo común divisor de &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; elementos sobre los &lt;script type=&quot;math/tex&quot;&gt;a_i&lt;/script&gt;, obtenemos el resultado.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tag*{$\blacksquare$}&lt;/script&gt;

&lt;p&gt;De la proposición anterior se tiene automáticamente el &lt;strong&gt;Algoritmo 1&lt;/strong&gt;, que resuelve el problema.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Algoritmo 1&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Dados &lt;script type=&quot;math/tex&quot;&gt;a_1, \dots, a_n \in \{1, \dots, 10^{12}\}&lt;/script&gt; con &lt;script type=&quot;math/tex&quot;&gt;n \in \{1, \dots, 2 \times 10^5\}&lt;/script&gt;. Realizamos el siguiente algoritmo:&lt;/dd&gt;
  &lt;dd&gt;
    &lt;ol&gt;
      &lt;li&gt;Calculamos &lt;script type=&quot;math/tex&quot;&gt;m = \gcd(a_1, \dots, a_n)&lt;/script&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;ol&gt;
      &lt;li&gt;Calculamos &lt;script type=&quot;math/tex&quot;&gt;F_m \mod 10^9+7&lt;/script&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;La única cuestión restante consiste en la implementación del algoritmo anterior. Para calcular el máximo común divisor de la lista utilizamos el &lt;strong&gt;Algoritmo de Euclides&lt;/strong&gt; para los dos primeros elementos, que quedan sustituidos por el resultado obtenido. Repetimos el proceso hasta obtener un único número final que es el máximo común divisor buscado. Este algoritmo tiene eficiencia &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; veces la del propio &lt;strong&gt;Algoritmo de Euclides&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para calcular &lt;script type=&quot;math/tex&quot;&gt;F_m \mod 10^9+7&lt;/script&gt; tenemos que tener en cuenta que &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; puede ser hasta &lt;script type=&quot;math/tex&quot;&gt;10^{12}&lt;/script&gt;. Es fácil realizar un algoritmo lineal para este propósito calculando todos los términos progresivamente y guardando solo los dos últimos en cada iteración. Sin embargo, esto no alcanza los objetivos en el peor caso. Se propone la siguiente idea para obtener una solución logarítmica sobre &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{pmatrix}
            1 &amp; 1 \\
            1 &amp; 0 \\
        \end{pmatrix}
        \begin{pmatrix}
            F_{k+2} &amp; F_{k+1} \\
            F_{k+1} &amp; F_{k} \\
        \end{pmatrix}
        =
        \begin{pmatrix}
            F_{k+3} &amp; F_{k+2} \\
            F_{k+2} &amp; F_{k+1} \\
    \end{pmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;Consecuentemente, por inducción:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{pmatrix}
            1 &amp; 1 \\
            1 &amp; 0 \\
        \end{pmatrix}^k
        \begin{pmatrix}
            F_{2} &amp; F_{1} \\
            F_{1} &amp; F_{0} \\
        \end{pmatrix}
        =
        \begin{pmatrix}
            F_{k+3} &amp; F_{k+2} \\
            F_{k+2} &amp; F_{k+1} \\
        \end{pmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;En nuestro caso:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{pmatrix}
            F_{2} &amp; F_{1} \\
            F_{1} &amp; F_{0} \\
        \end{pmatrix}
        =
        \begin{pmatrix}
            1 &amp; 1 \\
            1 &amp; 0 \\
        \end{pmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;Por consiguiente:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{pmatrix}
            1 &amp; 1 \\
            1 &amp; 0 \\
        \end{pmatrix}^k
        =
        \begin{pmatrix}
            F_{k+2} &amp; F_{k+1} \\
            F_{k+1} &amp; F_{k} \\
        \end{pmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;El problema se ha reducido a la exponenciación de la matriz &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
A = \begin{pmatrix} 1 &amp; 1 \\ 1 &amp; 0 \end{pmatrix} %]]&gt;&lt;/script&gt;. La exponenciación de matrices se puede conseguir logarítmica de forma análoga a la exponenciación (con exponente natural) de un número. El &lt;strong&gt;Algoritmo 2&lt;/strong&gt; muestra un pseudo-código recursivo para este propósito.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Algoritmo 2&lt;/strong&gt;&lt;/dt&gt;
  &lt;dd&gt;Función que devuelve el resultado de elevar la matriz &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; a &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;.&lt;/dd&gt;
  &lt;dd&gt;
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Potencia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Potencia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Potencia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Puesto que &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; puede ser &lt;script type=&quot;math/tex&quot;&gt;10^{12}&lt;/script&gt;, el valor obtenido por el &lt;strong&gt;Algoritmo 2&lt;/strong&gt; en este caso no cabría en memoria. De todas formas, debemos imprimir el resultado módulo &lt;script type=&quot;math/tex&quot;&gt;10^9+7&lt;/script&gt;. Puesto que el módulo de una suma o producto es el módulo de la suma o productos de los módulos, podemos aplicar el módulo a cada operación realizada manteniendo el funcionamiento. De esta forma los números con los que trabajará el algoritmo serán menores que &lt;script type=&quot;math/tex&quot;&gt;10^9+7&lt;/script&gt;, por lo que puede ejecutarse sin ningún problema.&lt;/p&gt;

&lt;h2 id=&quot;implementación-en-haskell&quot;&gt;Implementación en Haskell&lt;/h2&gt;

&lt;p&gt;Para la implementación en Haskell de la solución, usamos la función &lt;code class=&quot;highlighter-rouge&quot;&gt;gcd&lt;/code&gt; de la
biblioteca estándar y la convertimos en una función sobre listas usando &lt;code class=&quot;highlighter-rouge&quot;&gt;foldr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;El cálculo de Fibonacci lo hacemos usando la exponenciación de matrices para calcular
el par &lt;script type=&quot;math/tex&quot;&gt;(F_{2n+1},F_{2n})&lt;/script&gt; en función del par &lt;script type=&quot;math/tex&quot;&gt;(F_{n+1},F_{n})&lt;/script&gt;.
En concreto, si llamamos &lt;script type=&quot;math/tex&quot;&gt;a=F_{n}, b=F_{n+1}, c=a+b&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{pmatrix}
        F_{2n+2} &amp; F_{2n+1} \\
        F_{2n+1} &amp; F_{2n} \\
    \end{pmatrix}
    =
    \begin{pmatrix}
        c &amp; b \\
        b &amp; a \\
    \end{pmatrix}^{2}
    =
    \begin{pmatrix}
        c^2+b^2 &amp; c^2-a^2 \\
        c^2-a^2 &amp; b^2+a^2 \\
    \end{pmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;El código queda como sigue:&lt;/p&gt;

&lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Control.Monad&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- GCD sobre listas de enteros&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gcdList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gcdList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foldr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gcd&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Entrada y salida según el formato&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Acaba imprimiendo: fib ((gcdList list) - 1)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readLn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replicateM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readLn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gcdList&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Calcula fibonacci mod 10**9+7&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Calcula el par (fib n, fib (n + 1)) mod 10**9+7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- El caso de inducción usa la exponenciación de matrices implícitamente.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Reescribimos la suma y el producto para usarlos a módulo 10**9+7.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Integral&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;hkr&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hkr&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hkr&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hkr&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Más material sobre el problema puede encontrarse en el &lt;a href=&quot;https://github.com/libreim/problemas/tree/master/Seminario14-FibonacciGCD&quot;&gt;repositorio correspondiente del doble grado&lt;/a&gt;.&lt;/p&gt;
</description>
            <pubDate>Sat, 14 Feb 2015 00:00:00 +0000</pubDate>
            <link>/blog/2015-2-14-problema-fibonacci-gcd/</link>
            <guid isPermaLink="true">/blog/2015-2-14-problema-fibonacci-gcd/</guid>
        </item>
        
        <item>
            <title>Aproximación a Pi</title>
            <description>&lt;p&gt;Hoy es el día de &lt;script type=&quot;math/tex&quot;&gt;\pi&lt;/script&gt; (3/14). En este post vamos a presentar una serie de
métodos para conseguir aproximaciones numéricas de la constante.&lt;/p&gt;

&lt;h2 id=&quot;serie-de-leibniz&quot;&gt;Serie de Leibniz&lt;/h2&gt;
&lt;p&gt;Uno de los métodos de aproximación a &lt;script type=&quot;math/tex&quot;&gt;\pi&lt;/script&gt; viene dado por la serie de Leibniz:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\pi}{4} = \displaystyle{\sum_{n=0}^\infty \frac{(-1)^n}{2n+1}} =
\displaystyle{\left(1 - \frac{1}{3} + \frac{1}{5} - \frac{1}{7} + \dots \right)}&lt;/script&gt;

&lt;p&gt;Se basa en desarrollar la serie de potencias de la arcotangente:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\arctan x = \displaystyle{\sum_{n=0}^{\infty} \frac{x^{2n+1}}{2n+1}}=
\displaystyle{\left(x - \frac{x^3}{3} + \frac{x^5}{5} - \frac{x^7}{7} + \dots \right)}&lt;/script&gt;

&lt;p&gt;Y evaluarla en 1.
Esta fórmula tiene un pequeño inconveniente: es algo lenta para el cálculo de
&lt;script type=&quot;math/tex&quot;&gt;\pi&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Para más información sobre el método, visita
&lt;a href=&quot;https://en.wikipedia.org/wiki/Leibniz_formula_for_%CF%80&quot;&gt;Wikipedia&lt;/a&gt; y
para su demostración, &lt;a href=&quot;https://proofwiki.org/wiki/Leibniz%27s_Formula_for_Pi&quot;&gt;Proofwiki&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;fórmula-de-madhava&quot;&gt;Fórmula de Madhava&lt;/h2&gt;
&lt;p&gt;Otra forma de aproximarlo sería la dada por Madhava:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\pi = \displaystyle{\sqrt{12} \sum_{n=0}^{\infty} \frac{\left(-\frac{1}{3}\right)^n}{2n+1}} =
\displaystyle{\sqrt{12} \left(\frac{1}{1 \cdot 3^0} - \frac{1}{3 \cdot 3^1} + \frac{1}{5 \cdot 3^2} - \frac{1}{7 \cdot 3^3} + \cdots \right)}&lt;/script&gt;

&lt;p&gt;También está basada en el desarrollo de la arcotangente y en evaluarla en un punto, concretamente, en &lt;script type=&quot;math/tex&quot;&gt;\frac{1}{\sqrt{3}}&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\pi}{6} = \arctan \frac{1}{\sqrt{3}} = \displaystyle{\left(\frac{1}{\sqrt{3}} - \frac{\left(\frac{1}{\sqrt{3}}\right)^3}{3} +
\frac{\left(\frac{1}{\sqrt{3}}\right)^5}{5} - \frac{\left(\frac{1}{\sqrt{3}}\right)^7}{7} + \dots \right)} =
\displaystyle{\left(\frac{1}{\sqrt{3}} - \frac{\frac{1}{\sqrt{3}}}{3 \cdot 3} + \frac{\frac{1}{\sqrt{3}}}{5 \cdot 3^2} -
\frac{\frac{1}{\sqrt{3}}}{7 \cdot 3^3} + \dots \right)}&lt;/script&gt;

&lt;p&gt;Y despejar &lt;script type=&quot;math/tex&quot;&gt;\pi&lt;/script&gt;, la incluyo porque es anterior a la serie de Leibniz, aunque es algo menos conocida.
Para más información, visita &lt;a href=&quot;https://en.wikipedia.org/wiki/Madhava_series&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;producto-de-wallis&quot;&gt;Producto de Wallis&lt;/h2&gt;
&lt;p&gt;El producto de Wallis:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\pi}{2} = \displaystyle{\prod_{n = 1}^{\infty} \left(\frac{2n}{2n-1} \cdot \frac{2n}{2n+1} \right)} =
\frac{2}{1} \cdot \frac{2}{3} \cdot \frac{4}{3} \cdot \frac{4}{5} \cdot \frac{6}{5} \cdot \frac{6}{7} \cdot \frac{8}{7} \cdot \frac{8}{9} \cdots&lt;/script&gt;

&lt;p&gt;Éste producto se basa en que las raíces de &lt;script type=&quot;math/tex&quot;&gt;\frac{\sin x}{x}&lt;/script&gt; son &lt;script type=&quot;math/tex&quot;&gt;\pm n\pi&lt;/script&gt;
con &lt;script type=&quot;math/tex&quot;&gt;n \in \mathbb{N}&lt;/script&gt; y, por tanto,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\sin x}{x} =
k \prod_{n=0}^{\infty}(x-n\pi)(x+n\pi) = k \prod_{n=0}^{\infty}\left(1-\frac{x}{n\pi}\right)\left(1+\frac{x}{n\pi}\right) =
k \prod_{n=0}^{\infty}\left(1-\frac{x^2}{n^2 \pi^2}\right)&lt;/script&gt;

&lt;p&gt;con &lt;script type=&quot;math/tex&quot;&gt;k \in \mathbb{R}&lt;/script&gt; constante. Tomando límite a 0, se obtiene que &lt;script type=&quot;math/tex&quot;&gt;k = 1&lt;/script&gt;.
Y para obtener el producto de Wallis, basta con evaluar&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\frac{\pi}{2}}{\sin \left(\frac{\pi}{2}\right)} =
\frac{1}{\displaystyle{\prod_{n=0}^{\infty}\left(1-\frac{1}{4n^2}\right)}} = \displaystyle{\prod_{n = 1}^{\infty} \left(\frac{4n^2}{4n^2-1}\right)} =
\displaystyle{\prod_{n = 1}^{\infty} \left(\frac{2n}{2n-1} \cdot \frac{2n}{2n+1} \right)}&lt;/script&gt;

&lt;p&gt;Para más información general del método, visita &lt;a href=&quot;https://en.wikipedia.org/wiki/Wallis_product&quot;&gt;Wikipedia&lt;/a&gt;; y para su
demostración, visita &lt;a href=&quot;https://proofwiki.org/wiki/Wallis%27s_Product&quot;&gt;Proofwiki&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;algoritmo-de-borwein&quot;&gt;Algoritmo de Borwein&lt;/h2&gt;
&lt;p&gt;Aunque no he logrado entender cómo funciona, incluyo el algoritmo de Borwein &lt;sup id=&quot;fnref:study-in-analytic-number-theory&quot;&gt;&lt;a href=&quot;#fn:study-in-analytic-number-theory&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
por tener una convergencia nónica (es decir, en cada iteración, se multiplican por 9 el número de dígitos correctos),
establece como valores iniciales:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a_0 = \frac{1}{3} \mbox{, }r_0 = \frac{\sqrt{3} - 1}{2}\mbox{ y }s_0 = \sqrt[3]{1 - r_0^3}&lt;/script&gt;

&lt;p&gt;Y a partir de ahí, para cada iteración se calcula:&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;t_{n+1} = 1 + 2r_n&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;u_{n+1} = \sqrt[3]{9r_n(1+r_n+r_n^2)}&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;v_{n+1} = t^2_{n+1} + t_{n+1} u_{n+1} + u^2_{n+1}&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;w_{n+1} = 27 \frac{1 + s_n + s_n^2}{v_{n+1}}&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;a_{n+1} = w_{n+1} a_n + 3^{2n-1}(1-w_{n+1})&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;s_{n+1} = \frac{(1-r_n)^3}{(t_{n+1} + 2 u_{n+1}) v_{n+1}}&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;r_{n+1} = \sqrt[3]{1-s_{n+1}^3}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Y en este algoritmo, se obtiene que la sucesción &lt;script type=&quot;math/tex&quot;&gt;\{a_n\} \rightarrow \frac{1}{\pi}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Más información puede encontrarse &lt;a href=&quot;https://en.wikipedia.org/wiki/Borwein's_algorithm&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:study-in-analytic-number-theory&quot;&gt;
      &lt;p&gt;&lt;em&gt;Jonathon M. Borwein, Peter B. Borwein, Pi and the AGM&lt;/em&gt; - A Study in Analytic Number Theory and Computational Complexity, &lt;em&gt;Wiley, New York, 1987 Jorg Arndt, Christoph Haenel, Pi Unleashed, Springer, Berlin, 2001, ISBN 3-540-66572-2&lt;/em&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:study-in-analytic-number-theory&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate>
            <link>/blog/2015-3-14-aproximacion-a-pi/</link>
            <guid isPermaLink="true">/blog/2015-3-14-aproximacion-a-pi/</guid>
        </item>
        
    </channel>
</rss>
